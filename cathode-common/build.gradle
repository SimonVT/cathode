plugins {
  id 'com.android.library'
  id 'kotlin-android'
  id 'kotlin-android-extensions'
  id 'kotlin-kapt'
  id 'org.jlleitschuh.gradle.ktlint'
  id 'checkstyle'
  id 'com.jakewharton.butterknife'
}

dependencies {
  implementation project(':trakt-api')
  implementation deps.kotlin.stdlib
  implementation deps.androidx.appcompat
  implementation deps.butterknife
  kapt deps.butterknifeCompiler
  implementation deps.dagger
  implementation deps.daggerAndroid
  implementation deps.daggerAndroidSupport
  kapt deps.daggerCompiler
  kapt deps.daggerAndroidApt
  implementation deps.androidx.design
  implementation deps.androidx.palette
  implementation deps.picasso
  implementation deps.androidx.recyclerView
  implementation deps.schematic
  implementation deps.androidx.annotations
  implementation deps.androidx.fragment
  implementation deps.retrofit
  implementation deps.timber
  implementation deps.androidx.lifecycle.extensions
  implementation deps.androidx.swiperefreshlayout
  kapt deps.androidx.lifecycle.compiler

  testImplementation deps.junit
  testImplementation deps.robolectric
  testImplementation deps.truth
  testImplementation deps.androidx.test.core
  testImplementation deps.androidx.test.coreKtx
}

android {
  compileSdkVersion parent.ext.compileSdkVersion
  buildToolsVersion parent.ext.buildToolsVersion

  defaultConfig {
    minSdkVersion parent.ext.minSdkVersion
    targetSdkVersion parent.ext.targetSdkVersion

    versionCode = parent.ext.versionCode;
    versionName = parent.ext.versionName
  }

  lintOptions {
    abortOnError false
  }
}

checkstyle {
  configFile project.file('../config/checkstyle/checkstyle.xml')
  showViolations true
}

android.libraryVariants.all { variant ->
  def name = variant.buildType.name

  def checkstyle = project.tasks.create "checkstyle${name.capitalize()}", Checkstyle
  checkstyle.dependsOn variant.javaCompile
  checkstyle.source variant.javaCompile.source
  checkstyle.classpath = project.fileTree(variant.javaCompile.destinationDir)
  checkstyle.exclude('**/BuildConfig.java')
  checkstyle.exclude('**/R.java')
  checkstyle.exclude('**/R2.java')
  project.tasks.getByName("check").dependsOn checkstyle
}

apply from: rootProject.file('deps.gradle')
